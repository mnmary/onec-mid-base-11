
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	//
	//ДЗ 13-7
	ВИ_ДополнитьФормуКлиентСервер.ДополнитьФормуРеквизитомКонтактноеЛицо(ЭтотОбъект);
	//	
	
	//ДЗ 13-7
	Команда = Команды.Добавить("ПересчитатьСУчетомСкидки");
	Команда.Заголовок = "Пересчитать С Учетом Скидки";
	Команда.Действие = "ПересчитатьСУчетомСкидки";
	
	
	ПолеСогласованнаяСкидка = Элементы.Вставить("СогласованнаяСкидка", Тип("ПолеФормы"),Элементы.ЯчейкаСуммаДокумента);
	ПолеСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
	ПолеСогласованнаяСкидка.ПутьКДанным = "Объект.мн_СогласованнаяСкидка";
	ПолеСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "ВыполнитьПересчетСУчетомСкидки");

	КнопкаФормы = Элементы.Вставить("КнопкаПересчитатьСУчетомСкидки", Тип("КнопкаФормы"),Элементы.ЯчейкаСуммаДокумента);
	КнопкаФормы.ИмяКоманды = "ПересчитатьСУчетомСкидки";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	
	//  
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте			
Асинх Процедура ЗадатьВопросПриИзмененииСкидкиАсинх()
	//{{Доработка документа ДЗ11-2
	
	РезультатДиалога = Ждать ВопросАсинх("Сделать перерасчет с учетом скидки?", РежимДиалогаВопрос.ДаНет, 0);
	Если РезультатДиалога = КодВозвратаДиалога.Да Тогда
		ПересчитатьСУчетомСкидки();
	КонецЕсли;
	
	// }}	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПересчетСУчетомСкидки(Элемент)  
	//{{Доработка документа ДЗ11-2
	Если Объект.Товары.Количество() = 0 И Объект.Услуги.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ЗадатьВопросПриИзмененииСкидкиАсинх();
	// }}
КонецПроцедуры


&НаКлиенте
Процедура ПересчитатьСУчетомСкидки()
//  {{Доработка документа ДЗ11-2 
	
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Сумма = РасчитатьСуммуСУчетомСкидки(Строка.Цена,Строка.Количество,Объект.мн_СогласованнаяСкидка, Строка.Скидка);
	КонецЦикла;
	
	Для Каждого Строка Из Объект.Услуги Цикл
		Строка.Сумма = РасчитатьСуммуСУчетомСкидки(Строка.Цена,Строка.Количество,Объект.мн_СогласованнаяСкидка, Строка.Скидка);
	КонецЦикла;
	
	РассчитатьСуммуДокумента();
	
// }}	
КонецПроцедуры

&НаКлиенте			
Функция РасчитатьСуммуСУчетомСкидки(Цена, Количество, Скидка, ТекущаяСкидка)

//	{{ Доработка документа ДЗ13-7
	ОбщаяСкидка = Скидка + ТекущаяСкидка;
	
	Если ОбщаяСкидка > 100 Тогда
		ОбщаяСкидка = 100;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Суммарная скидка больше 100%");
	КонецЕсли;
	
	Возврат Цена * Количество - (Цена * Количество) * ОбщаяСкидка / 100;

//	}}
КонецФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//удалить
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	//
	
	//вставить
	// {{Доработка документа ДЗ11-2
	
	ТекущиеДанные.Сумма = РасчитатьСуммуСУчетомСкидки(ТекущиеДанные.Цена,ТекущиеДанные.Количество,Объект.мн_СогласованнаяСкидка, ТекущиеДанные.Скидка);

	// }}
	
	РассчитатьСуммуДокумента();
	//
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
